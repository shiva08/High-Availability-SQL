{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "resourceGroup":{
         "type":"string",
         "defaultValue":"[resourceGroup().name]"
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]"
      },
      "subscriptionId":{
         "type":"string",
         "defaultValue":"[subscription().subscriptionId]"
      },
      "virtualNetwork":{
         "type":"string",
         "defaultValue":"SQLHAVNET1"
      },
      "createSubnets" : {
         "type" : "bool",
         "defaultValue" : "[false()]"
      }, 
      "IPAddressSpace":{
         "type":"string",
         "defaultValue":"10.0.0.0"
      },
      "subnetClassBits":{
         "type":"int",
         "defaultValue":24
      },
      "subnetPrefix":{
         "type":"string",
         "defaultValue":"PrefixSubnetsss"
      },
      "networkSecurityGroupName":{
         "type":"string",
         "defaultValue":"NRMS-z6zkw5h6ct7geSQLHAVNET1"
      },
      "subnetNamesArray": {
         "type" : "Array",
         "defaultValue" : []
      },
      "vmcount":{
         "type":"int",
         "defaultValue":3
      },
      "createVM":{
         "type" : "bool",
         "defaultValue" : "[false()]"
      },
      // If createVM is true (checked on UI), generateVMNames can be true or false
      // If createVM is false, generateVMNames should be false (to avoid spelling errors of vmPrefix-0,vmPrefix-1)
      "generateVMNames":{
         "type" : "bool",
         "defaultValue" : "[false()]"
      },
      "vmprefix":{
         "type":"string",
         "defaultValue":"autoaa"
      },
      "vmNamesArray":{
         "type" : "Array",
         "defaultValue" : []
      },
      "sqlServerImagePublisher":{
         "type":"string",
         "defaultValue":"MicrosoftSQLServer"
      },
      "sqlServerImageType":{
         "type":"string",
         "defaultValue":"SQL2016SP2-WS2016"
      },
      "sqlServerSku":{
         "type":"string",
         "defaultValue":"Enterprise"
      },
      "sqlServerLicenseType":{
         "type":"string",
         "defaultValue":"PAYG"
      },
      // "existingSqlServiceAccount":{
      //    "type":"string",
      //    "defaultValue":"DomainAdmin@corp.contoso.com"
      // },
      // "sqlServicePassword":{
      //    "type":"securestring",
      //    "defaultValue":"Contoso!0000"
      // },
      "adminUsername":{
         "type":"string",
         "defaultValue":"DomainAdmin"
      },
      "adminPassword":{
         "type":"securestring",
         "defaultValue":"Contoso!0000"
      },
      "subnetNameForAG":{
         "type":"string",
         "defaultValue":"DC-subnet"
      },
      "publicIpAddressType":{
         "type":"string",
         "defaultValue":"Static"
      },
      "publicIpAddressSku":{
         "type":"string",
         "defaultValue":"Standard"
      },
      "virtualMachineSize":{
         "type":"string",
         "defaultValue":"Standard_D2s_v3"
      },
      "existingFullyQualifiedDomainName":{
         "type":"string",
         "defaultValue":"corp.contoso.com"
      },
      "domainJoinUserName":{
         "type":"string",
         "defaultValue":"CORP"
      },
      "domainFQDN":{
         "type":"string",
         "defaultValue":"corp.contoso.com"
      },
      "failoverClusterName":{
         "type":"string",
         "defaultValue":"autofc"
      },
      "failoverSQLServerImageType":{
         "type":"string",
         "defaultValue":"SQL2016-WS2016"
      },
      "loadBalancerName":{
         "type":"string",
         "defaultValue":"autoloadc"
      },
      "loadBalancerSku":{
         "type":"string",
         "defaultValue":"Standard"
      },
      "loadBalancerTier":{
         "type":"string",
         "defaultValue":"Regional"
      },
      "existingSqlAvailabilityGroup":{
         "type":"string",
         "defaultValue":"autoaggroupc"
      },
      "ListenerIp":{
         "type":"string",
         "defaultValue":"10.0.0.22"
      },
      "ListenerName":{
         "type":"string",
         "defaultValue":"autoaglistenerc"
      }
   },
   "variables":{
      "AddressRangeArray":"[split(parameters('IPAddressSpace'), '.')]",
      "copy":[
         {
            "name":"vmArrayHelper",
            "count":"[parameters('vmcount')]",
            "input":"[concat(parameters('vmprefix'), '-', copyIndex('vmArrayHelper'))]"
         },
         {
            "name":"subnetArrayHelper",
            "count":"[parameters('vmcount')]",
            "input":"[concat(parameters('subnetPrefix'), copyIndex('subnetArrayHelper'))]"
         },
         {
            "name":"subnetIPAddressArray",
            "count":"[parameters('vmcount')]",
            "input":"[format('{0}.{1}.{2}.{3}/{4}', variables('AddressRangeArray')[0], variables('AddressRangeArray')[1], copyIndex('subnetIPAddressArray', 5), variables('AddressRangeArray')[3], string(parameters('subnetClassBits')) ) ]"
         }
      ],

      "subnetArray" : "[ if(parameters('createSubnets'), variables('subnetArrayHelper'), parameters('subnetNamesArray') ) ]" ,
      "vmArray" : "[ if(parameters('generateVMNames'), variables('vmArrayHelper'), parameters('vmNamesArray')) ]",

      "vmList":"[replace(replace(replace(string(variables('vmArray')),'[',''),']',''),'\"','')]",
      "AddSubnetToVnetUri":"https://raw.githubusercontent.com/shiva08/ARM/main/add-subnet-to-existing-vnet.json",
      // "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.network/subnet-add-vnet-existing/azuredeploy.json",
      "CreateSQLVMTemplateUri":"https://raw.githubusercontent.com/shiva08/ARM/main/create-sqlvm.json",
      "JoinDomainTemplateUri":"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-domain-join-existing/azuredeploy.json",
      "AGPrerequisitesTemplateUri":"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.sqlvirtualmachine/sql-vm-ag-setup/azuredeploy.json",
      "LoadBalancerTemplateUri":"https://raw.githubusercontent.com/shiva08/ARM/main/load-balancer.json",
      "AGListenerTemplateUri":"https://raw.githubusercontent.com/shiva08/ARM/main/ag-listener.json"
   },
   "resources":[
      {
         "condition": "[parameters('createSubnets')]",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2021-04-01",
         "name":"[concat('add-subnet-to-vnet', '-', uniqueString(resourceGroup().id), '-', copyIndex())]",
         "copy":{
            "name":"Add-Subnet-To-Vnet",
            "count":"[parameters('vmcount')]",
            "mode":"parallel"
         },
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('AddSubnetToVnetUri')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "existingVNETName":{
                  "value":"[parameters('virtualNetwork')]"
               },
               "newSubnetName":{
                  "value":"[variables('subnetArray')[copyIndex()]]"
               },
               "newSubnetAddressPrefix":{
                  "value":"[variables('subnetIPAddressArray')[copyIndex()]]"
               },
               "networkSecurityGroupName":{
                  "value":"[parameters('networkSecurityGroupName')]"
               }
            }
         }
      },
      {
         "condition": "[parameters('createVM')]",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2021-04-01",
         "name":"[concat('create-sqlvm', '-', uniqueString(resourceGroup().id), '-', copyIndex())]",
         "dependsOn":[
            "Add-Subnet-To-Vnet"
         ],
         "copy":{
            "name":"Create-SQLVM",
            "count":"[parameters('vmcount')]",
            "mode":"parallel"
         },
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('CreateSQLVMTemplateUri')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "sqlServerSku":{
                  "value":"[parameters('sqlServerSku')]"
               },
               "sqlServerImagePublisher":{
                  "value":"[parameters('sqlServerImagePublisher')]"
               },
               "sqlServerImageType":{
                  "value":"[parameters('sqlServerImageType')]"
               },
               "sqlServerLicenseType":{
                  "value":"[parameters('sqlServerLicenseType')]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "networkInterfaceName":{
                  "value":"[concat(variables('vmArray')[copyIndex()],'-ni')]"
               },
               "enableAcceleratedNetworking":{
                  "value":true
               },
               "networkSecurityGroupName":{
                  "value":"[concat(variables('vmArray')[copyIndex()],'-nsg')]"
               },
               "networkSecurityGroupRules":{
                  "value":[
                     
                  ]
               },
               "subnetName":{
                  // "value":"[variables('subnetArray')[copyIndex()]]"
                  "value": "[parameters('subnetNameForAG')]"
               },
               "virtualNetworkId":{
                  "value":"[concat('/subscriptions/',parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroup'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetwork') )]"
               },
               "publicIpAddressName":{
                  "value":"[concat(variables('vmArray')[copyIndex()],'-ip')]"
               },
               "publicIpAddressType":{
                  "value":"[parameters('publicIpAddressType')]"
               },
               "publicIpAddressSku":{
                  "value":"[parameters('publicIpAddressSku')]"
               },
               "virtualMachineName":{
                  "value":"[variables('vmArray')[copyIndex()]]"
               },
               "virtualMachineComputerName":{
                  "value":"[variables('vmArray')[copyIndex()]]"
               },
               "virtualMachineRG":{
                  "value":"[parameters('resourceGroup')]"
               },
               "osDiskType":{
                  "value":"Premium_LRS"
               },
               "dataDisks":{
                  "value":[
                     {
                        "lun":0,
                        "createOption":"attach",
                        "caching":"ReadOnly",
                        "writeAcceleratorEnabled":false,
                        "id":null,
                        "name":"[concat(variables('vmArray')[copyIndex()], '_DataDisk_0')]",
                        "storageAccountType":null,
                        "diskSizeGB":null,
                        "diskEncryptionSet":null
                     },
                     {
                        "lun":1,
                        "createOption":"attach",
                        "caching":"None",
                        "writeAcceleratorEnabled":false,
                        "id":null,
                        "name":"[concat(variables('vmArray')[copyIndex()], '_DataDisk_1')]",
                        "storageAccountType":null,
                        "diskSizeGB":null,
                        "diskEncryptionSet":null
                     }
                  ]
               },
               "dataDiskResources":{
                  "value":[
                     {
                        "name":"[concat(variables('vmArray')[copyIndex()], '_DataDisk_0')]",
                        "sku":"Premium_LRS",
                        "properties":{
                           "diskSizeGB":1024,
                           "creationData":{
                              "createOption":"empty"
                           }
                        }
                     },
                     {
                        "name":"[concat(variables('vmArray')[copyIndex()], '_DataDisk_1')]",
                        "sku":"Premium_LRS",
                        "properties":{
                           "diskSizeGB":1024,
                           "creationData":{
                              "createOption":"empty"
                           }
                        }
                     }
                  ]
               },
               "virtualMachineSize":{
                  "value":"[parameters('virtualMachineSize')]"
               },
               "adminUsername":{
                  "value":"[parameters('adminUsername')]"
               },
               "adminPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "patchMode":{
                  "value":"AutomaticByOS"
               },
               "enableHotpatching":{
                  "value":false
               },
               "sqlVirtualMachineLocation":{
                  "value":"[parameters('location')]"
               },
               "sqlVirtualMachineName":{
                  "value":"[variables('vmArray')[copyIndex()]]"
               },
               "sqlConnectivityType":{
                  "value":"Private"
               },
               "sqlPortNumber":{
                  "value":1433
               },
               "sqlStorageDisksCount":{
                  "value":1
               },
               "sqlStorageWorkloadType":{
                  "value":"OLTP"
               },
               "sqlStorageDisksConfigurationType":{
                  "value":"NEW"
               },
               "sqlStorageStartingDeviceId":{
                  "value":2
               },
               "sqlStorageDeploymentToken":{
                  "value":35240
               },
               "sqlAutopatchingDayOfWeek":{
                  "value":"Sunday"
               },
               "sqlAutopatchingStartHour":{
                  "value":"2"
               },
               "sqlAutopatchingWindowDuration":{
                  "value":"60"
               },
               "dataPath":{
                  "value":"F:\\data"
               },
               "dataDisksLUNs":{
                  "value":[
                     0
                  ]
               },
               "logPath":{
                  "value":"G:\\log"
               },
               "logDisksLUNs":{
                  "value":[
                     1
                  ]
               },
               "tempDbPath":{
                  "value":"D:\\tempDb"
               },
               "rServicesEnabled":{
                  "value":"false"
               }
            }
         }
      },
      {
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2021-04-01",
         "name":"Join-the-domain",
         "dependsOn":[
            "Create-SQLVM"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('JoinDomainTemplateUri')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "location":{
                  "value":"[parameters('location')]"
               },
               "vmList":{
                  "value":"[variables('vmList')]"
               },
               "domainJoinUserName":{
                  "value":"[concat(parameters('domainJoinUserName'),'\\',parameters('adminUsername'))]"
               },
               "domainJoinUserPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "domainFQDN":{
                  "value":"[parameters('domainFQDN')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2021-04-01",
         "name":"AG-Prerequisites",
         "dependsOn":[
            "[resourceId('Microsoft.Resources/deployments/', 'Join-the-domain')]"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('AGPrerequisitesTemplateUri')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "failoverClusterName":{
                  "value":"[parameters('failoverClusterName')]"
               },
               "existingVmList":{
                  "value":"[variables('vmList')]"
               },
               "sqlServerLicenseType":{
                  "value":"[parameters('sqlServerLicenseType')]"
               },
               "sqlServerImageType":{
                  "value":"[parameters('failoverSQLServerImageType')]"
               },
               "existingFullyQualifiedDomainName":{
                  "value":"[parameters('domainFQDN')]"
               },
               "existingDomainAccount":{
                  "value":"[concat(parameters('adminUsername'),'@',parameters('domainFQDN'))]"
               },
               "domainAccountPassword":{
                  "value":"[parameters('adminPassword')]"
               },
               "existingSqlServiceAccount":{
                  "value":"[concat(parameters('adminUsername'),'@',parameters('domainFQDN'))]"
               },
               "sqlServicePassword":{
                  "value":"[parameters('adminPassword')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2021-04-01",
         "name":"Load-Balancer",
         "dependsOn":[
            "[resourceId('Microsoft.Resources/deployments/', 'AG-Prerequisites')]"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('LoadBalancerTemplateUri')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "name":{
                  "value":"[parameters('loadBalancerName')]"
               },
               "location":{
                  "value":"[parameters('location')]"
               },
               "sku":{
                  "value":"[parameters('loadBalancerSku')]"
               },
               "tier":{
                  "value":"[parameters('loadBalancerTier')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2021-04-01",
         "name":"AG-Listener",
         "dependsOn":[
            "[resourceId('Microsoft.Resources/deployments/', 'Load-Balancer')]"
         ],
         "properties":{
            "mode":"Incremental",
            "templateLink":{
               "uri":"[variables('AGListenerTemplateUri')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{
               "existingFailoverClusterName":{
                  "value":"[parameters('failoverClusterName')]"
               },
               "existingSqlAvailabilityGroup":{
                  "value":"[parameters('existingSqlAvailabilityGroup')]"
               },
               "existingVmList":{
                  "value":"[variables('vmList')]"
               },
               "existingVnet":{
                  "value":"[parameters('virtualNetwork')]"
               },
               "existingSubnet":{
                  "value":"[parameters('subnetNameForAG')]"
               },
               "existingInternalLoadBalancer":{
                  "value":"[parameters('loadBalancerName')]"
               },
               "ListenerIp":{
                  "value":"[parameters('ListenerIp')]"
               },
               "Listener":{
                  "value":"[parameters('ListenerName')]"
               }
            }
         }
      }
   ],
   "outputs":{
      
   }
}
